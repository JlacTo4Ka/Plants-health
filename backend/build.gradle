plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id("org.openapi.generator") version "7.10.0"

}

group = 'course.work'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.cloud:spring-cloud-dependencies:2023.0.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.2.0'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.26'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.529')
    implementation 'com.amazonaws:aws-java-sdk-s3'
}

tasks.named('compileJava') {
    dependsOn(tasks.openApiGenerate)
}
sourceSets.main.java.srcDir "${buildDir}/generate-resources/main/src/main/java"

openApiGenerate {
    generatorName = "spring"
    inputSpec.set("${project.projectDir}/src/main/resources/swagger/plants.yaml")
    configOptions = [
            skipDefaultInterface    :"true",
            dateLibrary             :"java8",
            serializableModel       :"true",
            interfaceOnly           :"true",
            hidenGenerationTimestamp:"true",
            useBeanValidation       :"true",
            generateSupportFile     :"false",
            swaggerDocketConfig     :"false",
            useTags                 :"true",
            openApiNullable         :"false",
            useSpringBoot3          :"true"
    ]
    globalProperties = [
            apis : '',
            models: ''
    ]
    outputDir = "$buildDir/generated"
    modelPackage = 'course.work.plants.model'
    apiPackage = 'course.work.plants.api'
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar') {
    archiveFileName = 'app.jar'
}