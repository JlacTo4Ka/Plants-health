spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  cloud:
    openfeign:
      httpclient:
        hc5.enabled: true
        max-connections: 200
        max-connections-per-route: 50
        time-to-live: 100
      client:
        config:
          mlFeignClient:
            url: "${ML_URL:localhost:8000}"
            connectTimeout: 100
            readTimeout: 30000
            loggerLevel: full
            dismiss404: false
          yandexFeignClient:
            url: https://llm.api.cloud.yandex.net
            connectTimeout: 100
            readTimeout: 30000
            loggerLevel: full
            defaultRequestHeaders:
              Authorization: "Api-Key ${YANDEX_ACCESS_TOKEN}"
            dismiss404: false
  mvc:
    servlet:
      load-on-startup: 1
  jackson:
    date-format: com.fasterxml.jackson.databind.util.StdDateFormat
    default-property-inclusion: NON_NULL
    mapper:
      ALLOW_COERCION_OF_SCALARS: false
    deserialization:
      READ_UNKNOWN_ENUM_VALUES_AS_NULL: true
  threads:
    virtual:
      enabled: true
  datasource:
    url: "${DB_URL:jdbc:postgresql://localhost:5432/plants}"
    username: "${DB_USERNAME}"
    password: "${DB_PASSWORD}"
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
  liquibase:
    change-log: classpath:/db/changelog/changelog.yaml
    url: "${spring.datasource.url}"
    user: "${DB_USERNAME}"
    password: "${DB_PASSWORD}"
  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
  task:
    execution:
      pool:
        max-size: 200
        core-size: 5
        queue-capacity: 5
      thread-name-prefix: "AsyncThread-"

yandex:
  gpt:
    folder-id: "${YANDEX_FOLDER_ID}"
    stream: "${YAMDEX_STREAM:false}"
    temperature: "${YANDEX_TEMPERATURE:0.5}"
    max-tokens: "${YANDEX_MAX_TOKENS:200}"
    model-uri: "${YANDEX_MODEL_URI:gpt://%s/yandexgpt-lite}"

jwt:
  secret: "${JWT_SECRET:secretsecretsecretsecretsecretsecret}"

s3:
  endpoint: "${S3_ENDPOINT:s3.cloud.ru}"
  region: "${S3_REGION:ru-central-1}"
  bucketName: "${S3_BUCKET_NAME:planet-health-image}"
  accessKey: "${S3_SECRET_KEY}"
  keyId: "${S3_KEY_ID}"

ml-plants:
  mock: ${ML_IS_MOCK:true}
